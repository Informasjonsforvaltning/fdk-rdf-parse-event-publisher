---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fdk-rdf-parse-event-publisher
  labels:
    app: fdk-rdf-parse-event-publisher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fdk-rdf-parse-event-publisher
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: fdk-rdf-parse-event-publisher
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/prometheus"
    spec:
      containers:
        - name: fdk-rdf-parse-event-publisher
          env:
            - name: LOG_LEVEL
              value: INFO
            - name: FDK_RDF_PARSER_SERVICE_URL
              valueFrom:
                secretKeyRef:
                  name: commonurl
                  key: FDK_RDF_PARSER_SERVICE_HOST
            - name: FDK_RDF_PARSER_SERVICE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: fdk-rdf-parser-service
                  key: API_KEY
            - name: KAFKA_SCHEMA_REGISTRY
              valueFrom:
                secretKeyRef:
                  name: fdk-metadata-quality
                  key: SCHEMA_REGISTRY
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                secretKeyRef:
                  name: fdk-metadata-quality
                  key: BROKERS
          image: fdk-rdf-parse-event-publisher
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5
          resources:
            requests:
              memory: 500Mi
